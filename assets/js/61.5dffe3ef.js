(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{612:function(t,e,a){"use strict";a.r(e);var s=a(17),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-什么是递归-它是如何工作的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是递归-它是如何工作的"}},[t._v("#")]),t._v(" 1 什么是递归？它是如何工作的？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Recursion is an approach to solving problems using a function that calls itself as a subroutine")])]),t._v(" "),a("li",[a("p",[t._v("The trick is each time a recursive function calls itself, it reduces the given problem into subproblems, The recursion call continues until it reaches a point where the subproblem can be solved without further recursion")])])]),t._v(" "),a("h2",{attrs:{id:"递归函数的构成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归函数的构成"}},[t._v("#")]),t._v(" 递归函数的构成？")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("A simple base case")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("A set of rules, also known as recurrence relation that reduces all other cases towards the base case")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("Note that there could be multiple places where the function may call itself.")])]),t._v(" "),a("h2",{attrs:{id:"_2-如何用递归解决一个问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何用递归解决一个问题"}},[t._v("#")]),t._v(" 2 如何用递归解决一个问题？")]),t._v(" "),a("blockquote",[a("p",[t._v("Print a string in reverse order")])]),t._v(" "),a("h2",{attrs:{id:"_3-如何分析一个递归算法的时间和空间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何分析一个递归算法的时间和空间复杂度"}},[t._v("#")]),t._v(" 3 如何分析一个递归算法的时间和空间复杂度？")]),t._v(" "),a("ul",[a("li",[t._v("todo")])]),t._v(" "),a("h2",{attrs:{id:"_4-对于一个问题-除了用递归-还有更好的解决办法么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-对于一个问题-除了用递归-还有更好的解决办法么"}},[t._v("#")]),t._v(" 4 对于一个问题， 除了用递归， 还有更好的解决办法么？")]),t._v(" "),a("ul",[a("li",[t._v("memorize")]),t._v(" "),a("li",[t._v("dp")])]),t._v(" "),a("h2",{attrs:{id:"如何写好递归函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何写好递归函数"}},[t._v("#")]),t._v(" 如何写好递归函数？")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("递归函数的返回值和参数")])]),t._v(" "),a("ul",[a("li",[t._v("是否有返回值？")]),t._v(" "),a("li",[t._v("参数不够，是否要新增？否则递归函数没法继续往下写")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("终止条件")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("单层递归的逻辑")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);