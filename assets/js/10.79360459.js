(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{580:function(v,_,t){"use strict";t.r(_);var a=t(17),l=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"为什么有这么个网站"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么有这么个网站"}},[v._v("#")]),v._v(" 为什么有这么个网站？")]),v._v(" "),t("ul",[t("li",[v._v("记录自己的刷题历程")]),v._v(" "),t("li",[v._v("按类型整理题目，使知识系统化")]),v._v(" "),t("li",[v._v("看会和写会是两个层次，所以在这里记录")]),v._v(" "),t("li",[v._v("如果有帮助到他人，更好。")])]),v._v(" "),t("h2",{attrs:{id:"以什么方式组织内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以什么方式组织内容"}},[v._v("#")]),v._v(" 以什么方式组织内容？")]),v._v(" "),t("ul",[t("li",[v._v("题目描述")]),v._v(" "),t("li",[v._v("时间复杂度和空间复杂度分析")]),v._v(" "),t("li",[v._v("思路的简要整理")]),v._v(" "),t("li",[v._v("代码实现（JS 版本）")])]),v._v(" "),t("h2",{attrs:{id:"如何学习算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何学习算法"}},[v._v("#")]),v._v(" 如何学习算法？")]),v._v(" "),t("ul",[t("li",[v._v("程序 = 数据结构 + 算法")]),v._v(" "),t("li",[v._v("数据结构 ：数据之间以什么样的方式存储（逻辑结构和物理结构）")]),v._v(" "),t("li",[v._v("逻辑结构 ： 线性的？ 还是非线形的")]),v._v(" "),t("li",[v._v("物理结构： 内存是否连续")]),v._v(" "),t("li",[v._v("算法 ： 求 1 到 100 的和 ？\n方法 1. 可以从 1 依次加到 100\n方法 2. 可以直接使用公式 ( n *( n+1) )/2 n =100")])]),v._v(" "),t("h2",{attrs:{id:"如何评价算法的好坏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何评价算法的好坏"}},[v._v("#")]),v._v(" 如何评价算法的好坏？")]),v._v(" "),t("blockquote",[t("p",[v._v("从下面这两个方面分析 大 O 表示法 只看最高位的那一项 其他常数可以省略")])]),v._v(" "),t("ul",[t("li",[v._v("时间复杂度")]),v._v(" "),t("li",[v._v("空间复杂度")])]),v._v(" "),t("h2",{attrs:{id:"时间复杂度有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度有哪些"}},[v._v("#")]),v._v(" 时间复杂度有哪些？")]),v._v(" "),t("ul",[t("li",[v._v("O(n)")]),v._v(" "),t("li",[v._v("O(n^2)")]),v._v(" "),t("li",[v._v("O(n^3)")]),v._v(" "),t("li",[v._v("O(logN)")]),v._v(" "),t("li",[v._v("O(1) 最优")])]),v._v(" "),t("h2",{attrs:{id:"空间复杂度有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度有哪些"}},[v._v("#")]),v._v(" 空间复杂度有哪些？")]),v._v(" "),t("ul",[t("li",[v._v("O(N)")]),v._v(" "),t("li",[v._v("O(1) 最优 （实际上就是使用多个变量 也叫多指针 two pointers three pointers）")])]),v._v(" "),t("h2",{attrs:{id:"刷题遇到困难怎么办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#刷题遇到困难怎么办"}},[v._v("#")]),v._v(" 刷题遇到困难怎么办？")]),v._v(" "),t("ul",[t("li",[t("ol",[t("li",[v._v("迎难而上")])])]),v._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[v._v("掌握不熟悉的知识点， 系统化")])])]),v._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[v._v("多些，多练， 看别人的解题思路， 整理成自己的知识体系")])])])]),v._v(" "),t("h2",{attrs:{id:"数据结构的存储方式有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构的存储方式有哪些"}},[v._v("#")]),v._v(" 数据结构的存储方式有哪些？")]),v._v(" "),t("ul",[t("li",[v._v("顺序存储和链式存储")])]),v._v(" "),t("h2",{attrs:{id:"数据结构的基本操作有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构的基本操作有哪些"}},[v._v("#")]),v._v(" 数据结构的基本操作有哪些？")]),v._v(" "),t("ul",[t("li",[v._v("增")]),v._v(" "),t("li",[v._v("删")]),v._v(" "),t("li",[v._v("改")]),v._v(" "),t("li",[v._v("查")])]),v._v(" "),t("h2",{attrs:{id:"数据结构的遍历方式有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构的遍历方式有哪些"}},[v._v("#")]),v._v(" 数据结构的遍历方式有哪些？")]),v._v(" "),t("ol",[t("li",[v._v("迭代 （for 循环 while 循环 或者数组特有的 forEach for of 等等）")]),v._v(" "),t("li",[v._v("递归")])]),v._v(" "),t("h2",{attrs:{id:"数据结构有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构有哪些"}},[v._v("#")]),v._v(" 数据结构有哪些？")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("线性")]),v._v(" "),t("ul",[t("li",[v._v("数组")]),v._v(" "),t("li",[v._v("栈")]),v._v(" "),t("li",[v._v("队列")]),v._v(" "),t("li",[v._v("链表")])])]),v._v(" "),t("li",[t("p",[v._v("非线形")]),v._v(" "),t("ul",[t("li",[v._v("树")]),v._v(" "),t("li",[v._v("图")]),v._v(" "),t("li",[v._v("堆（特殊的树 存储方式用数组表示）")])])])]),v._v(" "),t("h2",{attrs:{id:"有哪些常用的技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常用的技巧"}},[v._v("#")]),v._v(" 有哪些常用的技巧？")]),v._v(" "),t("ul",[t("li",[v._v("分治")]),v._v(" "),t("li",[v._v("二分")]),v._v(" "),t("li",[v._v("贪心")]),v._v(" "),t("li",[v._v("动态规划")]),v._v(" "),t("li",[v._v("回溯")]),v._v(" "),t("li",[v._v("递归")])]),v._v(" "),t("h2",{attrs:{id:"先刷什么题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#先刷什么题"}},[v._v("#")]),v._v(" 先刷什么题？")]),v._v(" "),t("ul",[t("li",[v._v("先刷树！！！ 先刷树！！！")])])])}),[],!1,null,null,null);_.default=l.exports}}]);