(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{588:function(t,a,s){"use strict";s.r(a);var r=s(17),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_278-first-bad-version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_278-first-bad-version"}},[t._v("#")]),t._v(" 278 first bad version")]),t._v(" "),s("h2",{attrs:{id:"二分查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二分查找"}},[t._v("#")]),t._v(" 二分查找")]),t._v(" "),s("blockquote",[s("p",[t._v("什么时候想到可以使用二分查找？ sorted array\n数组内的元素是否有重复？ 一般情况是没有重复的情况\n有重复的怎么处理？继续二分 leetcode 34\n如果二分查找找不到怎么处理？ 左边的节点就是结果 leetcoe 35")])]),t._v(" "),s("ul",[s("li",[t._v("模版")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("binarySearch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//condition")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("满足条件 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" or mid\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//r < l")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" or l\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("h2",{attrs:{id:"_367-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_367-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/valid-perfect-square/",target:"_blank",rel:"noopener noreferrer"}},[t._v("367"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("h2",{attrs:{id:"_374-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_374-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/guess-number-higher-or-lower/",target:"_blank",rel:"noopener noreferrer"}},[t._v("374"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("h2",{attrs:{id:"_658-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_658-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/find-k-closest-elements/",target:"_blank",rel:"noopener noreferrer"}},[t._v("658"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("ul",[s("li",[t._v("题目不好读懂")])]),t._v(" "),s("h2",{attrs:{id:"_981-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_981-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/time-based-key-value-store/",target:"_blank",rel:"noopener noreferrer"}},[t._v("981"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("ul",[s("li",[t._v("设计数据结构")])]),t._v(" "),s("h2",{attrs:{id:"_153-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_153-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",target:"_blank",rel:"noopener noreferrer"}},[t._v("153"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("ul",[s("li",[t._v("没有旋转（和原来数组一样的情况 直接返回 nums[0]）和")]),t._v(" "),s("li",[t._v("已经旋转的情况\n"),s("ul",[s("li",[t._v("找中点 再决定往左找还是往右找 旋转的一个特点就是 右边的 比左边最大的还大")]),t._v(" "),s("li",[t._v("找到中点 就更新结果 取最小 直到左右指针相遇后离开")])])])]),t._v(" "),s("h2",{attrs:{id:"_74-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_74-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/search-a-2d-matrix/",target:"_blank",rel:"noopener noreferrer"}},[t._v("74"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("h2",{attrs:{id:"_1898"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1898"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/maximum-number-of-removable-characters/",target:"_blank",rel:"noopener noreferrer"}},[t._v("1898"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("难懂 没做出来")])]),t._v(" "),s("h2",{attrs:{id:"_875-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_875-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/koko-eating-bananas/",target:"_blank",rel:"noopener noreferrer"}},[t._v("875"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("ul",[s("li",[t._v("对 食物从 1 到最大 二分 找到中间值计算所有都吃完的耗时， 耗时和 h 比较。 大的话， 增加左边， 小的话减小右边 每次小于等于的时候更新结果 开始结果给最大 最后返回结果")])]),t._v(" "),s("h2",{attrs:{id:"_34-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",target:"_blank",rel:"noopener noreferrer"}},[t._v("34"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("ul",[s("li",[t._v("找到中点 再继续找 左边和右边 两次二分查找")])]),t._v(" "),s("h2",{attrs:{id:"_4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/median-of-two-sorted-arrays/",target:"_blank",rel:"noopener noreferrer"}},[t._v("4"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("hard todo")])]),t._v(" "),s("h2",{attrs:{id:"_35-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/search-insert-position/",target:"_blank",rel:"noopener noreferrer"}},[t._v("35"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("h2",{attrs:{id:"_33-✓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-✓"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/search-in-rotated-sorted-array/",target:"_blank",rel:"noopener noreferrer"}},[t._v("33"),s("OutboundLink")],1),t._v(" [✓]")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("有点难 需要再次回顾")])]),t._v(" "),s("li",[s("p",[t._v("704")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);