let n = 4,
  k = 2;
//k =2 就是嵌套两层 如果k很大 你就没法用for循环处理了 所以要用递归

for (let i = 1; i <= 4; i++) {
  //后一项
  for (let j = i + 1; j <= n; j++) {
    console.log("i, j", i, j);
  }
}

//递归的处理思路是 画出决策树
// 对于第一个元素 ，如果没有满足数组长度==k 那我就把其他的可能push到数组 ==k的时候 就算是一种结果， 放到总的结果集里面
// 对于第二个元素 ，也是上面的处理思路 ，所以可以用递归来解决

//递归的函数的返回值是什么？ 没有
//参数是什么？ start index 决定 每次取哪一个元素 并且保证不会重复取 res path path收集当前的结果
// 递归的结束条件？path .length == k
